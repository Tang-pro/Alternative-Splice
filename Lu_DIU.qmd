---
title: "TM_1_DIU"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

```{r}
library(rats)
library(tidyverse)
library(data.table)
library(ggplot2)
```

```{r}
Ghir_iso_tpm <- read.table("Ghir_isoform.tpm", header = T, check.names = F) %>%
  rownames_to_column(var = "Isoform id") 
```

```{r}
Ghid <- read.table("lu_iso_gene_id", col.names = c("target id", "parent id"))
```

```{r}
GhGTF <- gtf2ids("Ghincfib_gene.gtf")
```

```{r}
ovule_3dpa <- data.table(Ghir_iso_tpm[, c("Isoform id", "TM-1_ovule_-3dpa-1_L2", "TM-1_ovule_-3dpa-2_L2", "TM-1_ovule_-3dpa-3_L2")])
ovule_1dpa <- data.table(Ghir_iso_tpm[, c("Isoform id", "TM-1_ovule_-1dpa-1_L2", "TM-1_ovule_-1dpa-2_L2", "TM-1_ovule_-1dpa-3_L2")])
ovule0dpa <- data.table(Ghir_iso_tpm[, c("Isoform id", "TM-1_ovule_0dpa-1_L2", "TM-1_ovule_0dpa-2_L2", "TM-1_ovule_0dpa-3_L1")])
ovule1dpa <- data.table(Ghir_iso_tpm[, c("Isoform id", "TM-1_ovule_1dpa-1_L1", "TM-1_ovule_1dpa-2_L1", "TM-1_ovule_1dpa-3_L2")])
ovule3dpa <- data.table(Ghir_iso_tpm[, c("Isoform id", "TM-1_ovule_3dpa-1_L1", "TM-1_ovule_3dpa-2_L1", "TM-1_ovule_3dpa-3_L2")])
ovule5dpa <- data.table(Ghir_iso_tpm[, c("Isoform id", "TM-1_ovule_5dpa-1_L2", "TM-1_ovule_5dpa-2_L1","TM-1_ovule_5dpa-3_L2")])
fiber10dpa <- data.table(Ghir_iso_tpm[, c(1, 20:22)]) 
fiber15dpa <- data.table(Ghir_iso_tpm[, c("Isoform id", "TM-1_fiber_15dpa-1_L2", "TM-1_fiber_15dpa-2_L2", "TM-1_fiber_15dpa-3_L3")])
fiber20dpa <- data.table(Ghir_iso_tpm[, c("Isoform id", "TM-1_fiber_20dpa-1_L2", "TM-1_fiber_20dpa-2_L2", "TM-1_fiber_20dpa-3_L2")])
fiber25dpa <- data.table(Ghir_iso_tpm[, c("Isoform id", "TM-1_fiber_25dpa-1_L2", "TM-1_fiber_25dpa-2_L2", "TM-1_fiber_25dpa-3_L2")])
```

```{r}
diu_1dpavs_3dpa <- call_DTU(annot = GhGTF,
                count_data_A = ovule_3dpa,
                count_data_B = ovule_1dpa,
                name_A = "ovule_3dpa",
                name_B = "ovule_1dpa",
                scaling = 1,
                verbose = FALSE,
                description = "Ovule_1VS_3DPA",
                dprop_thresh = 0.2)
```

```{r}
diu0dpavs_1dpa <- call_DTU(annot = GhGTF,
                count_data_A = ovule_1dpa,
                count_data_B = ovule0dpa,
                name_A = "ovule_1dpa",
                name_B = "ovule0dpa",
                scaling = 1,
                verbose = FALSE,
                description = "Ovule0VS_1DPA",
                dprop_thresh = 0.2)
```

```{r}
diu1dpavs0dpa <- call_DTU(annot = GhGTF,
                count_data_A = ovule0dpa,
                count_data_B = ovule3dpa,
                name_A = "ovule0dpa",
                name_B = "ovule1dpa",
                scaling = 1,
                verbose = FALSE,
                description = "Ovule1VS0DPA",
                dprop_thresh = 0.2)
```

```{r}
diu3dpavs1dpa <- call_DTU(annot = GhGTF,
                count_data_A = ovule1dpa,
                count_data_B = ovule3dpa,
                name_A = "ovule1dpa",
                name_B = "ovule3dpa",
                scaling = 1,
                verbose = FALSE,
                description = "Ovule3VS1DPA",
                dprop_thresh = 0.2)
```

```{r}
diu5dpavs3dpa <- call_DTU(annot = GhGTF,
                count_data_A = ovule3dpa,
                count_data_B = ovule5dpa,
                name_A = "ovule3dpa",
                name_B = "ovule5dpa",
                scaling = 1,
                verbose = FALSE,
                description = "Ovule5VS3DPA",
                dprop_thresh = 0.2)
```

```{r}
diu10dpavs5dpa <- call_DTU(annot = GhGTF,
                count_data_A = ovule5dpa,
                count_data_B = fiber10dpa,
                name_A = "ovule5dpa",
                name_B = "fiber10dpa",
                scaling = 1,
                verbose = FALSE,
                description = "Fiber10VS5DPA",
                dprop_thresh = 0.2)
```

```{r}
diu15dpavs10dpa <- call_DTU(annot = GhGTF,
                count_data_A = fiber10dpa,
                count_data_B = fiber15dpa,
                name_A = "Fiber10DPA",
                name_B = "fiber15dpa",
                scaling = 1,
                verbose = FALSE,
                description = "Fiber10VS15DPA",
                dprop_thresh = 0.2)
```

```{r}
diu20dpavs15dpa <- call_DTU(annot = GhGTF,
                count_data_A = fiber15dpa,
                count_data_B = fiber20dpa,
                name_A = "fiber15dpa",
                name_B = "fiber20dpa",
                scaling = 1,
                verbose = FALSE,
                description = "Fiber20VS15DPA",
                dprop_thresh = 0.2)
```

```{r}
diu25dpavs20dpa <- call_DTU(annot = GhGTF,
                count_data_A = fiber20dpa,
                count_data_B = fiber25dpa,
                name_A = "fiber20dpa",
                name_B = "fiber25dpa",
                scaling = 1,
                verbose = FALSE,
                description = "Fiber25VS20DPA",
                dprop_thresh = 0.2)
```

```{r}
library(readxl)
sum_DIU <- read_excel("TM_1_sumDIU.xlsx")
```

```{r}
#展示
sum_DIU$ID <- as.factor(seq_along(sum_DIU$Stage))
sum_DIU$Stage <- factor(sum_DIU$Stage, levels = sum_DIU$Stage[order(as.numeric(sum_DIU$ID))])
```

```{r}
pdf("TM_1_sumDIU.pdf", width = 12, height = 10)
# 绘制圆形图
ggplot(sum_DIU, aes(x = ID, y = DIU, fill = Stage)) +
  geom_col() +  # 使用 geom_col 绘制柱状图
  coord_polar() +  # 转换坐标系为极坐标，形成圆形图
  theme_void() +  # 移除多余的背景和标签
  scale_fill_brewer(palette = "YlOrBr") +
  labs(title = "Differential Isoform Usage across Stages", fill = "Stage") +
  theme(plot.title = element_text(hjust = 0.5, face = "bold"))
dev.off()
```
